//              Pushing the project to a production environment (aka LIVE)

1. Open your terminal and cd to the advanced folder(or whatever you've named your root folder) and run "php init" to set it to a production env.
2. Re-config the DB names from common/config/main-local.php
3. In the root project folder we create 2 folders - E.g: "project" and "admin". Place everything inside "project".
- We move our files from @Frontend/web to the root folder which is basically outside of "project and "admin". (advanced folder or whatever you've named it)
- Now we move our files from @Backend/web to the "admin" folder.
- We open the project and re-config index.php that is in the root folder outside of "project" and "admin".

--Current index.php locally hosted before changing anything--
<?php
defined('YII_DEBUG') or define('YII_DEBUG', true);
defined('YII_ENV') or define('YII_ENV', 'dev');

require __DIR__ . '/../../vendor/autoload.php';
require __DIR__ . '/../../vendor/yiisoft/yii2/Yii.php';
require __DIR__ . '/../../common/config/bootstrap.php';
require __DIR__ . '/../config/bootstrap.php';

$config = yii\helpers\ArrayHelper::merge(
    require __DIR__ . '/../../common/config/main.php',
    require __DIR__ . '/../../common/config/main-local.php',
    require __DIR__ . '/../config/main.php',
    require __DIR__ . '/../config/main-local.php'
);

(new yii\web\Application($config))->run();


--After changing the new paths--
<?php
defined('YII_DEBUG') or define('YII_DEBUG', false);
defined('YII_ENV') or define('YII_ENV', 'prod');

require __DIR__ . '/project/vendor/autoload.php';
require __DIR__ . '/project/vendor/yiisoft/yii2/Yii.php';
require __DIR__ . '/project/common/config/bootstrap.php';
require __DIR__ . '/project/frontend/config/bootstrap.php';

$config = yii\helpers\ArrayHelper::merge(
    require __DIR__ . '/project/common/config/main.php',
    require __DIR__ . '/project/common/config/main-local.php',
    require __DIR__ . '/project/frontend/config/main.php',
    require __DIR__ . '/project/frontend/config/main-local.php'
);

(new yii\web\Application($config))->run();

- We move the .htaccess file from @frontend/web to the root folder that is outside of "project" and "admin"
- Time for the @Backend. We go to "admin" and open index.php.
 
--Current index.php locally hosted before changing anything--
<?php
defined('YII_DEBUG') or define('YII_DEBUG', true);
defined('YII_ENV') or define('YII_ENV', 'dev');

require __DIR__ . '/../../vendor/autoload.php';
require __DIR__ . '/../../vendor/yiisoft/yii2/Yii.php';
require __DIR__ . '/../../common/config/bootstrap.php';
require __DIR__ . '/../config/bootstrap.php';

$config = yii\helpers\ArrayHelper::merge(
    require __DIR__ . '/../../common/config/main.php',
    require __DIR__ . '/../../common/config/main-local.php',
    require __DIR__ . '/../config/main.php',
    require __DIR__ . '/../config/main-local.php'
);

(new yii\web\Application($config))->run();

--After changing the new paths--
<?php
defined('YII_DEBUG') or define('YII_DEBUG', false);
defined('YII_ENV') or define('YII_ENV', 'prod');

require __DIR__ . '/../project/vendor/autoload.php';
require __DIR__ . '/../project/vendor/yiisoft/yii2/Yii.php';
require __DIR__ . '/../project/common/config/bootstrap.php';
require __DIR__ . '/../project/backend/config/bootstrap.php';

$config = yii\helpers\ArrayHelper::merge(
    require __DIR__ . '/../project/common/config/main.php',
    require __DIR__ . '/../project/common/config/main-local.php',
    require __DIR__ . '/../project/backend/config/main.php',
    require __DIR__ . '/../project/backend/config/main-local.php'
);

(new yii\web\Application($config))->run();
